@using Progress.Sitefinity.RestSdk.Dto;

@model Progress.Sitefinity.AspNetCore.Widgets.Models.ContentList.ContentListViewModel
@{
    var imageCss = Model.GetFieldCss("Image");
    var titleCss = Model.GetFieldCss("Title");
    var textCss = Model.GetFieldCss("Text");
    var wrapperCss = Model.GetFieldCss("Content list");
}
    <div class="grid-x grid-padding-x" @Html.BuildAttributes(Model.Attributes)>
        @foreach (var item in Model.Items)
    {
        var image = Model.GetFirstRelatedMedia(item, "Image");
        var thumbnail = image != null ? image.GetThumbnail() : null;
        var title = Model.GetFieldValue<string>(item, "Title");
        var text = Model.GetFieldValue<string>(item, "Text");

        <div class="cell medium-4">
            <div class="card">
                @if (thumbnail != null)
                {
                    <img class=" @(imageCss)" src='@(thumbnail.Url)' title='@(image.Title)' />
                }
                else if (image != null)
                {
                    <img class=" @(imageCss)" src='@(image.Url)' alt='@(image.AlternativeText)' title='@(image.Title)' />
                }
                <div>
                    @if (title != null)
                    {
                        <h5 class="card-divider @(titleCss)">
                            @if (Model.RenderLinks)
                            {
                                var itemUrl = Model.GetItemUrl(this.Context, item);
                                @if (itemUrl != null)
                                {
                                    <a href='@itemUrl.ToString()'>@title</a>
                                }
                                else
                                {
                                    @Html.HtmlSanitize(title)
                                }
                            }
                            else
                            {
                                @Html.HtmlSanitize(title)
                            }
                        </h5>
                    }
                    @if (text != null)
                    {
                        <p class="card-section @(textCss)">@Html.HtmlSanitize(text)</p>
                    }
                </div>
            </div>
        </div>
    }
    </div>


@if (Model.Pager != null)
{
    <div class="margin-top-1">
        @await Html.PartialAsync("ContentPager", Model.Pager)
    </div>
}
