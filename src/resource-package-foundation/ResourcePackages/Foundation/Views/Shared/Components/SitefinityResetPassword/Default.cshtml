@using Progress.Sitefinity.AspNetCore.Widgets.Models.ResetPassword

@model Progress.Sitefinity.AspNetCore.Widgets.Models.ResetPassword.ResetPasswordViewModel

@{
    var lbls = Model.Labels;
}

<div data-sf-visibility-hidden="@Model.VisibilityClasses[Progress.Sitefinity.AspNetCore.Configuration.VisibilityStyle.Hidden]" data-sf-invalid="@Model.InvalidClass"  class="@(string.IsNullOrEmpty(Model.CssClass) ? null : Model.CssClass)" @Html.BuildAttributes(Model.Attributes)>
    @if (Model.IsResetPasswordRequest)
    {
        <div data-sf-role="sf-reset-password-container">
            @if (Model.Error || (Model.RequiresQuestionAndAnswer && string.IsNullOrEmpty(Model.SecurityQuestion)))
            {
                <h2>@lbls.ResetPasswordHeader</h2>
                <div data-sf-role="error-message-container" class="callout alert" role="alert" aria-live="assertive">@lbls.ErrorMessage</div>
            }
            else
            {
                <environment include="Development">
                    <script src="Scripts/LoginWidgets/reset-password.js" section-name="Bottom" assembly-ref="Progress.Sitefinity.AspNetCore.Widgets"></script>
                </environment>
                <environment exclude="Development">
                    <script src="Scripts/LoginWidgets/reset-password.min.js" section-name="Bottom" assembly-ref="Progress.Sitefinity.AspNetCore.Widgets"></script>
                </environment>

                var securityQuestionInputId = Html.GetUniqueId("sf-security-question-");
                var newPasswordInputId = Html.GetUniqueId("sf-new-password-");
                var repeatPasswordInputId = Html.GetUniqueId("sf-repeat-password-");

                <div data-sf-role="form-container">
                    <h2 class="mb-3">@lbls.ResetPasswordHeader</h2>
                    <div data-sf-role="error-message-container" class="callout alert margin-vertical-1 hide" role="alert" aria-live="assertive"></div>
                    <form method="post" action="@Model.ResetUserPasswordHandlerPath" role="form">
                        @if (Model.RequiresQuestionAndAnswer && !string.IsNullOrEmpty(Model.SecurityQuestion))
                        {
                            var securityQuestionLabel = string.IsNullOrEmpty(lbls.SecurityQuestionLabel) ? Model.SecurityQuestion : $"{lbls.SecurityQuestionLabel} {Model.SecurityQuestion}";
                            <div class="margin-bottom-3">
                                <label for="@securityQuestionInputId" class="form-label">@securityQuestionLabel</label>
                                <input id="@securityQuestionInputId" type="text" class="form-control" name="Answer" data-sf-role="required">
                            </div>
                        }
                        <div class="margin-bottom-3">
                            <label for="@newPasswordInputId" class="form-label">@lbls.NewPasswordLabel</label>
                            <input id="@newPasswordInputId" type="password" class="form-control" name="NewPassword" data-sf-role="required">
                        </div>
                        <div class="margin-bottom-3">
                            <label for="@repeatPasswordInputId" class="form-label">@lbls.RepeatNewPasswordLabel</label>
                            <input id="@repeatPasswordInputId" type="password" class="form-control" data-sf-role="required">
                        </div>

                        <input type="hidden" name="SecurityToken" value="@Context.Request.QueryString.Value" />
                        <input class="btn btn-primary w-100" type="submit" value="@lbls.SaveButtonLabel" />
                    </form>
                    <input type="hidden" name="ErrorMessage" value="@lbls.ErrorMessage" />
                    <input type="hidden" name="AllFieldsAreRequiredErrorMessage" value="@lbls.AllFieldsAreRequiredErrorMessage" />
                    <input type="hidden" name="PasswordsMismatchErrorMessage" value="@lbls.PasswordsMismatchErrorMessage" />
                </div>
                <div data-sf-role="success-message-container" class="hide">
                    <h2>@lbls.SuccessMessage</h2>
                    @if (!string.IsNullOrEmpty(Model.LoginPageLink))
                    {
                        <a href="@Model.LoginPageLink" class="text-decoration-none">@lbls.BackLinkLabel</a>
                    }
                </div>
            }
        </div>
    }
    else
    {
        <environment include="Development">
            <script src="Scripts/LoginWidgets/forgotten-password.js" section-name="Bottom" assembly-ref="Progress.Sitefinity.AspNetCore.Widgets"></script>
        </environment>
        <environment exclude="Development">
            <script src="Scripts/LoginWidgets/forgotten-password.min.js" section-name="Bottom" assembly-ref="Progress.Sitefinity.AspNetCore.Widgets"></script>
        </environment>

        var emailInputId = Html.GetUniqueId("sf-email-");

        <div data-sf-role="sf-forgotten-password-container">
            <h2 class="margin-bottom-3">@lbls.ForgottenPasswordHeader</h2>
            <div data-sf-role="error-message-container" class="callout alert margin-vertical-1 hide" role="alert" aria-live="assertive"></div>
            <div data-sf-role="form-container">
                <p>@lbls.ForgottenPasswordLabel</p>
                <form action="@Model.SendResetPasswordEmailHandlerPath" role="form" novalidate>
                    <div class="margin-bottom-3">
                        <label class="form-label" for="@emailInputId">@lbls.EmailLabel</label>
                        <input id="@emailInputId" type="email" class="form-control" name="Email" data-sf-role="required">
                    </div>
                    <input class="button expanded" type="submit" value="@lbls.SendButtonLabel" />
                    <input type="hidden" name="ResetPasswordUrl" value="@Model.ResetPasswordUrl" />
                </form>

                <input type="hidden" name="InvalidEmailFormatMessage" value="@lbls.InvalidEmailFormatMessage" />
                <input type="hidden" name="FieldIsRequiredMessage" value="@lbls.FieldIsRequiredMessage" />
            </div>
            <div data-sf-role="success-message-container" class="hide margin=top-3">
                <p>@lbls.ForgottenPasswordSubmitMessage <strong data-sf-role="sent-email-label"></strong></p>
                <p>@lbls.ForgottenPasswordLinkMessage</p>
            </div>
            @if (!string.IsNullOrEmpty(Model.LoginPageLink))
            {
                <a href="@Model.LoginPageLink" class="text-decoration-none">@lbls.BackLinkLabel</a>
            }
        </div>
    }
</div>
