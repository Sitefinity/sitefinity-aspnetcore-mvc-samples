@using Progress.Sitefinity.AspNetCore.TagHelpers;
@using Progress.Sitefinity.Renderer.Models;

@model Progress.Sitefinity.AspNetCore.Widgets.Models.Button.ButtonViewModel

<environment include="Development">
    <script src="Scripts/call-to-action.js" section-name="Bottom" assembly-ref="Progress.Sitefinity.AspNetCore.Widgets"></script>
</environment>
<environment exclude="Development">
    <script src="Scripts/call-to-action.min.js" section-name="Bottom" assembly-ref="Progress.Sitefinity.AspNetCore.Widgets"></script>
</environment>
@{
    string classAttr;
    void ButtonTag(string label, LinkModel linkModel, string cssClass, string typeToPlaceAttributeOn)
    {
        @if (!string.IsNullOrEmpty(label))
        {
            classAttr = string.IsNullOrEmpty(cssClass) ? null : cssClass;
            <a @Html.GenerateAnchorFromLink(linkModel, classAttr) data-call-to-action @Html.BuildAttributes(Model.Attributes, typeToPlaceAttributeOn)>
                @label
            </a>
        }
    }
    classAttr = !string.IsNullOrEmpty(Model.CssClass) ? string.Format("flex-container align-middle {0}", Model.CssClass) : "flex-container align-middle";
}

<div @Html.BuildAttributes(@Model.Attributes, "Wrapper") class="@classAttr">
    @{
        ButtonTag(Model.PrimaryActionLabel, Model.PrimaryActionLink, string.Format(@"margin-right-1 {0}", Model.PrimaryButtonCssClass), "Primary");
    }
    @{
        ButtonTag(Model.SecondaryActionLabel, Model.SecondaryActionLink, Model.SecondaryButtonCssClass, "Secondary");
    }
</div>
