function init(e) { if (e && "widgetLoaded" === e.type) { var t = e.detail.element.querySelector("[data-sf-role='form-container']"); t && initFields(t) } else document.querySelectorAll("[data-sf-role='form-container']").forEach((function (e) { initFields(e) })) } function initFields(e) { initTextbox(e), initParagraph(e), initSubmit(e), initMultipleChoice(e), initCheckboxes(e), initDropdown(e), initFileField(e), formHiddenFieldsInitialization(e), processFormRules(e, !0) } var delayTimer; function dispatchValueChanged(e) { clearTimeout(delayTimer), delayTimer = setTimeout((function () { "function" == typeof sfFormValueChanged && sfFormValueChanged(e.srcElement) }), 300) } document.removeEventListener("widgetLoaded", init), document.addEventListener("widgetLoaded", init); var shouldScrollToFirstErrorField = !1; function initTextbox(e) { initTextField("text-field-container", "text-field-input", e) } function initParagraph(e) { initTextField("paragraph-text-field-container", "paragraph-text-field-textarea", e) } function initMultipleChoice(e) { initChoiceField("multiple-choice-field-container", "multiple-choice-field-input", e) } function initCheckboxes(e) { initChoiceField("checkboxes-field-container", "checkboxes-field-input", e) } function initSubmit(e) { var t = e.querySelector('[data-sf-role="success-message"]'), i = e.querySelector('[data-sf-role="error-message"]'), n = e.querySelector('[data-sf-role="loading"]'), r = e.querySelector('[data-sf-role="fields-container"]'), o = e.querySelector('[data-sf-role="custom-submit-action"]')?.value, a = e.querySelector('[data-sf-role="redirect-url"]')?.value, l = e.querySelector('[data-sf-role="skip-data-submission"]'), s = e.closest("form"); function u(e) { i.innerText = e, i.classList.add("d-block"), n.classList.add("d-none"), n.classList.remove("d-block"), r.classList.remove("d-none"), r.classList.add("d-block") } function d(e, i) { e ? document.location.replace(e) : (i && (t.innerText = i), n.classList.add("d-none"), n.classList.remove("d-block"), t.classList.add("d-block")) } e.querySelectorAll('[data-sf-role="submit-button-container"] button').forEach((e => e.addEventListener("click", (function (e) { shouldScrollToFirstErrorField = !0 })))), s.onsubmit = function (e) { e?.preventDefault(); var c = e.target.querySelectorAll('[data-sf-role*="field-container"'), f = !0; if (Array.from(c).filter((e => !e.classList.contains("d-none"))).forEach((e => { var t = !0; switch (e.getAttribute("data-sf-role")) { case "file-field-container": t = handleFileValidation(e); break; case "text-field-container": case "paragraph-text-field-container": t = handleTextValidation(e); break; case "multiple-choice-field-container": t = handleChoiceValidation(e, "multiple-choice-field-input"); break; case "checkboxes-field-container": t = handleChoiceValidation(e, "checkboxes-field-input"); break; case "dropdown-list-field-container": t = handleDropdownValidation(e) }f = f && t })), !f) return !1; if (i.classList.remove("d-block"), n.classList.remove("d-none"), n.classList.add("d-block"), t.classList.add("d-block"), r.classList.add("d-none"), r.classList.remove("d-block"), l) return d(a), !1; var h = "X-SF-ANTIFORGERY-REQUEST", p = { "X-SF-ANTIFORGERY-REQUEST": "" }; return fetch("/sitefinity/anticsrf", { headers: p }).then((function (e) { function t(e) { e && (p[h] = e); var t = new FormData(s); t.set("sf_antiforgery", e), fetch(s.getAttribute("action"), { method: "POST", body: t }).then((function (e) { e.json().then((function (t) { e.status >= 200 && e.status < 300 ? t.success ? "True" === o ? d(a) : d(t.redirectUrl, t.message) : u(t.error) : e.status >= 400 && e.status < 600 && u(t.error) }), (function (e) { u("Form submit response was not in json format and could not be parsed") })) }), (function (e) { u(JSON.stringify(e)) })) } 200 === e.status ? e.json().then((function (e) { t(e.Value) })) : 204 === e.status ? t() : u("Failed to submit form due to lack of csrf token") })), !1 } } function initChoiceField(e, t, i) { i.querySelectorAll(`[data-sf-role='${e}']`).forEach((e => { var i = e.querySelectorAll(`[data-sf-role='${t}']`); i.forEach((function (t) { handleRequiredChoice(e, i), t.addEventListener("change", (function () { i.forEach((function (e) { clearErrorMessage(e) })), toggleOtherChoiceInputVisibility(e), handleRequiredChoice(e, i) })), t.addEventListener("input", onInput) })), addOtherChoiceInputsEventListener(e) })) } function toggleOtherChoiceInputVisibility(e) { var t = e.querySelector("[id*='choiceOption-other']"), i = e.querySelector("[data-sf-role='choice-other-input']"); if (i) if (clearErrorMessage(i), t.checked) { var n = t.required || "True" === e.querySelector('[data-sf-role="required-validator"]')?.value; i.required = n, i.classList.remove("d-none"), i.classList.add("d-block") } else i.required = !1, i.classList.add("d-none"), i.classList.remove("d-block") } function addOtherChoiceInputsEventListener(e) { var t = e.querySelector("[id*='choiceOption-other']"), i = e.querySelector("[data-sf-role='choice-other-input']"); i && i.addEventListener("input", (function () { t.setAttribute("value", i.value), clearErrorMessage(i) })) } function handleRequiredChoice(e, t) { var i = e.querySelector('[data-sf-role="required-validator"]'); if (i) { var n = "True" === i.value; Array.from(t).find((e => e.checked)) || !n ? t.forEach((e => { e.removeAttribute("required") })) : t.forEach((e => { e.setAttribute("required", "required") })) } } function initDropdown(e) { e.querySelectorAll('[data-sf-role="dropdown-list-field-container"]').forEach((e => { var t = e.querySelector('[data-sf-role="dropdown-list-field-select"]'); t.addEventListener("change", handleDropdownValidation), t.addEventListener("input", onInput) })) } function initFileField(e) { var t = e.querySelectorAll('[data-sf-role="file-field-container"]'); if (t && !(t.length < 1)) for (var i = 0; i < t.length; i++) { var n = t[i], r = n.querySelector('[data-sf-role="file-input-template"]').innerHTML; a(r, n), l(r, n) } function o(e) { var t = e.querySelectorAll('[data-sf-role="remove-input"]'), i = !1; t.length > 1 && (i = !0); for (let e = 0; e < t.length; e++) { const n = t[e]; n.classList.toggle("d-none", !i), n.classList.toggle("d-inline-block", i) } } function a(e, t) { var i = t.querySelector('[data-sf-role="file-field-inputs"]'); const n = document.createElement("div"); n.innerHTML = e; const r = n.firstElementChild; i.appendChild(r), o(i); const a = r.querySelector('input[type="file"]'), l = r.querySelector('[data-sf-role="remove-input"]'); l && l.addEventListener("click", (function (e) { e.preventDefault(), a.removeEventListener("change", handleFileValidation), a.removeEventListener("input", onInput), a.removeEventListener("invalid", handleFileValidation), r.remove(), o(i) })), a.addEventListener("change", handleFileValidation), a.addEventListener("input", onInput), a.addEventListener("invalid", handleFileValidation) } function l(e, t) { JSON.parse(t.querySelector('[data-sf-role="violation-restrictions"]').value).allowMultiple && t.querySelector('[data-sf-role="add-input"]').addEventListener("click", (function (i) { i.preventDefault(), a(e, t) })) } } function initTextField(e, t, i) { for (var n = getInputs(e, t, i), r = 0; r < n.length; r++)n[r].addEventListener("change", handleTextValidation), n[r].addEventListener("input", (function (e) { handleTextValidation(e), dispatchValueChanged(e) })), n[r].addEventListener("invalid", handleTextValidation) } function getInputs(e, t, i) { var n = i.querySelectorAll(`[data-sf-role="${e}"]`), r = []; if (n && n.length > 0) for (var o = 0; o < n.length; o++) { var a = n[o].querySelectorAll(`[data-sf-role="${t}"]`); !a || a.length < 1 || r.push(...a) } return r } function onInput(e) { clearErrorMessage(e.target), dispatchValueChanged(e) } function handleChoiceValidation(e, t) { var i = findFieldContainerElement(e), n = i.querySelectorAll(`[data-sf-role='${t}']`), r = i.querySelector("[data-sf-role='choice-other-input']"), o = !1; n.forEach((function (e) { o = o || e.checked })), n.forEach((function (e) { clearErrorMessage(e) })); var a = getValidationMessages(n[0]); return !o && n[0].required ? (setErrorMessage(n[0], a.required, !1, !1), !1) : (r && clearErrorMessage(r), !(r && r.required && r.validity.valueMissing) || (setErrorMessage(r, a.required), !1)) } function handleTextValidation(e) { e instanceof Event && (e = e.target); var t = findFieldContainerElement(e), i = t.querySelector("input[data-sf-role='text-field-input']") || t.querySelector("textarea[data-sf-role='paragraph-text-field-textarea']"), n = getValidationMessages(i), r = getValidationRestrictions(i); if (r) { var o = i.value.length >= r.minLength; if (r.maxLength > 0 && (o &= i.value.length <= r.maxLength), !(o = o || 0 === i.value.length)) return setErrorMessage(i, n.invalidLength, !0), !1 } return i.required && i.validity.valueMissing ? (setErrorMessage(i, n.required, !0), !1) : i.validity.patternMismatch ? (setErrorMessage(i, n.regularExpression, !0), !1) : i.validity.valid ? (clearErrorMessage(i, !0), !0) : (setErrorMessage(i, n.invalid, !0), !1) } function handleFileValidation(e) { e instanceof Event && (e = e.target); var t = findFieldContainerElement(e), i = t.querySelectorAll('input[type="file"]'), n = getValidationRestrictions(e); if (n.required) { for (var r = t.querySelector('[data-sf-role="required-violation-message"]'), o = null, a = 0; a < i.length; a++) { var l = i[a].closest('[data-sf-role="single-file-input-wrapper"]').querySelector('[data-sf-role="filesize-violation-message"]'), s = i[a].closest('[data-sf-role="single-file-input-wrapper"]').querySelector('[data-sf-role="filetype-violation-message"]'); l && l.classList.remove("d-block"), s && s.classList.remove("d-block"), r.classList.remove("d-block"), i[a].classList.remove("is-invalid"), i[a].value && (o = !0) } if (!o) { for (a = 0; a < i.length; a++)i[a].classList.add("is-invalid"); return r.classList.add("d-block"), !1 } } if (n.maxSize || n.minSize) { if (void 0 === window.File || void 0 === window.FileList) return !0; var u = !1, d = 1e3 * n.minSize * 1e3, c = 1e3 * n.maxSize * 1e3; for (a = 0; a < i.length; a++)if (i[a].files.length > 0) { var f = i[a].files[0]; l = i[a].closest('[data-sf-role="single-file-input-wrapper"]').querySelector('[data-sf-role="filesize-violation-message"]'); if (d > 0 && f.size < d || c > 0 && f.size > c) { l.classList.add("d-block"), u = !0, i[a].focus(); continue } l.classList.remove("d-block") } if (u) return !1 } if (n.allowedFileTypes) { for (u = !1, a = 0; a < i.length; a++) { var h = i[a].closest('[data-sf-role="single-file-input-wrapper"]').querySelector('[data-sf-role="filetype-violation-message"]'); if (i[a].value) { var p = i[a].value.lastIndexOf("."); if (p >= 0) { var g = i[a].value.substring(p).toLowerCase(); if (n.allowedFileTypes.indexOf(g) < 0) { h.classList.add("d-block"), u = !0, i[a].focus(); continue } h.classList.remove("d-block") } } } if (u) return !1 } return !0 } function handleDropdownValidation(e) { e instanceof Event && (e = e.target); var t = findFieldContainerElement(e).querySelector("select[data-sf-role='dropdown-list-field-select']"); return t.required && "" === t.value ? (setErrorMessage(t, getValidationMessages(t).required, !0), !1) : (clearErrorMessage(t, !0), !0) } function getValidationMessages(e) { return getHiddenFieldValue(e, "violation-messages") } function getValidationRestrictions(e) { return getHiddenFieldValue(e, "violation-restrictions") } function getHiddenFieldValue(e, t) { var i = getHiddenField(e, t); return i ? JSON.parse(i.value) : null } function setErrorMessage(e, t, i = !1, n = !0) { var r = getErrorMessageContainer(e); r ? (r.innerText = t, n && e.classList.add("is-invalid"), i || r.classList.add("d-block")) : e.setCustomValidity(t), shouldScrollToFirstErrorField && (shouldScrollToFirstErrorField = !1, e.parentNode.scrollIntoView()) } function clearErrorMessage(e, t) { var i = getErrorMessageContainer(e); i && (i.innerText = "", e.classList.remove("is-invalid"), t || i.classList.remove("d-block")) } function findFieldContainerElement(e) { for (var t = e; ;) { if (t.hasAttribute("data-sf-role")) { if (-1 !== t.getAttribute("data-sf-role").indexOf("field-container")) break } t = t.parentElement } return t } function getErrorMessageContainer(e) { return getHiddenField(e, "error-message") } function getHiddenField(e, t) { var i = findFieldContainerElement(e); if (i) { var n = i.querySelector(`[data-sf-role="${t}"]`); if (n) return n } return null } var FormRulesSettings = function () { var e = [], t = [], i = [], n = [], r = []; function o(e, t) { this.name = e, this.conditionEvaluator = t } function a(e, t, i, n) { this.inputType = e, this.parser = t, this.escape = i, this.escapeRegEx = n || /[\-\[\]{}()*+?.,\\\^$|#\s]/g } function l(e, t, i) { this.fieldContainerDataSfRole = e, this.elementSelector = t, this.additionalFilter = i } return o.prototype.canProcess = function (e) { return e === this.name }, o.prototype.process = function (e, n, r) { if (!t || 0 === t.length) return !1; for (var o, a, l = 0; l < t.length; l++)(0 === l || t[l].canParse(r)) && (o = t[l]); for (var s = 0; s < i.length; s++)(0 === s || i[s].canParse(r)) && (a = i[s]); var u = o ? o.parse(e) : e, d = a ? a.parse(n) : n; return this.conditionEvaluator(u, d) }, a.prototype.canParse = function (e) { return this.inputType === e }, a.prototype.parse = function (e) { var t = this.parser(e); return !0 === this.escape && "string" == typeof t ? t.replace(this.escapeRegEx, "\\$&") : t }, l.prototype.getFieldContainerDataSfRole = function () { return this.fieldContainerDataSfRole }, l.prototype.getFieldValues = function (e) { var t = this.elementSelector; this.additionalFilter && (t += this.additionalFilter); var i = e.querySelectorAll(t), n = []; return i.forEach((e => { var t = e?.value?.replace(/^\s+|\s+$/g, ""); n.push(t) })), n }, l.prototype.getFieldValueElements = function (e) { return e.querySelector(this.elementSelector) }, l.prototype.canGetValues = function (e) { return this.fieldContainerDataSfRole === e.getAttribute("data-sf-role") }, { addConditionEvaluator: function (t, i) { e.push(new o(t, i)) }, removeConditionEvaluator: function (t) { for (var i = 0; i < e.length; i++)if (e[i].name === t) { e.splice(i, 1); break } }, processConditionEvaluator: function (t, i, n, r) { for (var o = 0; o < e.length; o++)if (e[o].canProcess(t)) return e[o].process(n, r, i); return !1 }, getConditionEvaluator: function (t) { for (var i = 0; i < e.length; i++)if (e[i].canProcess(t)) return e[i]; return null }, addActionExecutor: function (e, t) { r.push({ actionName: e, actionExecutor: t }) }, removeActionExecutor: function (e) { r = r.filter((function (t) { return t.actionName !== e })) }, getActionExecutor: function (e) { var t = r.filter((function (t) { return t.actionName === e }))[0]; return t ? t.actionExecutor : null }, addInputTypeParser: function (e, i, n, r) { t.push(new a(e, i, n, r)) }, removeInputTypeParser: function (e) { for (var i = 0; i < t.length; i++)if (t[i].inputType === e) { t.splice(i, 1); break } }, addRuleValueParser: function (e, t, n, r) { i.push(new a(e, t, n, r)) }, removeRuleValueParser: function (e) { for (var t = 0; t < i.length; t++)if (i[t].inputType === e) { i.splice(t, 1); break } }, addFieldSelector: function (e, t, i) { if (n.map((function (e) { return e.fieldContainerDataSfRole })).indexOf(e) > -1) throw "Container with attribute [data-sf-role='" + e + "'] have been registered already."; n.push(new l(e, t, i)) }, removeFieldSelector: function (e) { for (var t = 0; t < n.length; t++)if (n[t].fieldContainerDataSfRole === e) { n.splice(t, 1); break } }, getFieldValues: function (e) { for (var t = 0; t < n.length; t++)if (n[t].canGetValues(e)) return n[t].getFieldValues(e); return [] }, getFieldValueElements: function (e) { for (var t = 0; t < n.length; t++)if (n[t].canGetValues(e)) return n[t].getFieldValueElements(e); return null }, getFieldsContainerNames: function () { for (var e = [], t = 0; t < n.length; t++)e.push(n[t].getFieldContainerDataSfRole()); return e } } }(), FormRuleConstants = { Actions: { Show: "Show", Hide: "Hide", Skip: "Skip", ShowMessage: "ShowMessage", GoTo: "GoTo", SendNotification: "SendNotification" } }; function FormRuleActionExecutorBase() { } function HideShowFieldFormRuleActionExecutor(e) { if (FormRuleActionExecutorBase.call(this), e !== FormRuleConstants.Actions.Show && e !== FormRuleConstants.Actions.Hide) throw new Error("Invalid action name! Only " + FormRuleConstants.Actions.Show + " and " + FormRuleConstants.Actions.Hide + " action names are allowed"); this.actionName = e } function SkipToPageFormRuleActionExecutor() { FormRuleActionExecutorBase.call(this) } function ShowMessageRuleActionExecutor() { FormRuleActionExecutorBase.call(this) } function GoToPageRuleActionExecutor() { FormRuleActionExecutorBase.call(this) } function SendNotificationRuleActionExecutor() { FormRuleActionExecutorBase.call(this) } function formHiddenFieldsInitialization(e) { var t = e.querySelector('[data-sf-role="form-rules-hidden-fields"]'); if (t) { var i = t.value; if (i) i.split(",").forEach((t => { var i = e.querySelector('script[data-sf-role="start_field_' + t + '"]'); if (i) { var n = i.getAttribute("data-sf-role-field-name"), r = i.querySelector('[name="' + n + '"]'); r && r.setAttribute("disabled", "disabled"); for (var o = i.nextElementSibling; !o.matches('script[data-sf-role="end_field_' + t + '"]');)o.classList.add("d-none"), o.classList.remove("d-block"), o = o.nextElementSibling } })) } "function" == typeof processFormRules && processFormRules(e); var n = e.closest('[data-sf-role="form-visibility-wrapper"]'); n && (Array.from(n.children).forEach((e => { n.parentElement.insertBefore(e, n) })), n.remove()) } FormRuleActionExecutorBase.prototype.applyState = function (e, t) { throw new Error("applyState() function not implemented") }, FormRuleActionExecutorBase.prototype.updateState = function (e, t) { throw new Error("updateState() function not implemented") }, FormRuleActionExecutorBase.prototype.undoUpdateState = function (e, t) { throw new Error("undoUpdateState() function not implemented") }, FormRuleActionExecutorBase.prototype.isConflict = function (e, t) { return !1 }, FormRuleActionExecutorBase.prototype.getActionFieldIds = function (e) { return [] }, HideShowFieldFormRuleActionExecutor.prototype = Object.create(FormRuleActionExecutorBase.prototype), HideShowFieldFormRuleActionExecutor.prototype.constructor = HideShowFieldFormRuleActionExecutor, HideShowFieldFormRuleActionExecutor.prototype.applyState = function (e, t) { var i = e.helper.fieldIndexOf(e.fields, t.target), n = e.fields[i].FieldControlId; e.fields[i].Visible ? e.helper.showField(e, n) : e.helper.hideField(e, n) }, HideShowFieldFormRuleActionExecutor.prototype.updateState = function (e, t) { var i = !1, n = e.helper.fieldIndexOf(e.fields, t.target); return this.actionName !== FormRuleConstants.Actions.Show || e.fields[n].Visible ? this.actionName === FormRuleConstants.Actions.Hide && e.fields[n].Visible && (e.fields[n].Visible = !1, i = !0) : (e.fields[n].Visible = !0, i = !0), i }, HideShowFieldFormRuleActionExecutor.prototype.undoUpdateState = function (e, t) { var i = e.helper.fieldIndexOf(e.fields, t.target); this.actionName === FormRuleConstants.Actions.Show ? e.fields[i].Visible = !1 : e.fields[i].Visible = !0 }, HideShowFieldFormRuleActionExecutor.prototype.isConflict = function (e, t) { return (t.name === FormRuleConstants.Actions.Show || t.name === FormRuleConstants.Actions.Hide) && e.target === t.target }, HideShowFieldFormRuleActionExecutor.prototype.getActionFieldIds = function (e) { return [e.target] }, SkipToPageFormRuleActionExecutor.prototype = Object.create(FormRuleActionExecutorBase.prototype), SkipToPageFormRuleActionExecutor.prototype.constructor = SkipToPageFormRuleActionExecutor, SkipToPageFormRuleActionExecutor.prototype.applyState = function (e, t) { e.skipToPageCollection && e.formContainer.trigger("form-page-skip", [e.skipToPageCollection]) }, SkipToPageFormRuleActionExecutor.prototype.updateState = function (e, t) { return e.skipToPageCollection || (e.skipToPageCollection = []), t.pageIndex < parseInt(t.target) && (e.skipToPageCollection.push({ SkipFromPage: t.pageIndex, SkipToPage: parseInt(t.target) }), !0) }, SkipToPageFormRuleActionExecutor.prototype.undoUpdateState = function (e, t) { e.skipToPageCollection && (e.skipToPageCollection = e.skipToPageCollection.filter((function (e) { return e.SkipFromPage !== t.pageIndex || e.SkipToPage !== parseInt(t.target) }))) }, SkipToPageFormRuleActionExecutor.prototype.isConflict = function (e, t) { return e.name === t.name && e.pageIndex === t.pageIndex }, ShowMessageRuleActionExecutor.prototype = Object.create(FormRuleActionExecutorBase.prototype), ShowMessageRuleActionExecutor.prototype.constructor = ShowMessageRuleActionExecutor, ShowMessageRuleActionExecutor.prototype.applyState = function (e, t) { var i = e.formContainer.querySelector('[data-sf-role="form-rules-message"]'); i && (this.execute ? i.value = t.target : i.value === t.target && (i.value = "")) }, ShowMessageRuleActionExecutor.prototype.updateState = function (e, t) { return this.execute = !0, !0 }, ShowMessageRuleActionExecutor.prototype.undoUpdateState = function (e, t) { this.execute = !1 }, ShowMessageRuleActionExecutor.prototype.isConflict = function (e, t) { return t.name === FormRuleConstants.Actions.ShowMessage || t.name === FormRuleConstants.Actions.GoTo }, GoToPageRuleActionExecutor.prototype = Object.create(FormRuleActionExecutorBase.prototype), GoToPageRuleActionExecutor.prototype.constructor = GoToPageRuleActionExecutor, GoToPageRuleActionExecutor.prototype.applyState = function (e, t) { var i = e.formContainer.querySelector('[data-sf-role="form-rules-redirect-page"]'); i && (this.execute ? i.value = t.target : i.value === t.target && (i.value = "")) }, GoToPageRuleActionExecutor.prototype.updateState = function (e, t) { return this.execute = !0, !0 }, GoToPageRuleActionExecutor.prototype.undoUpdateState = function (e, t) { this.execute = !1 }, GoToPageRuleActionExecutor.prototype.isConflict = function (e, t) { return t.name === FormRuleConstants.Actions.ShowMessage || t.name === FormRuleConstants.Actions.GoTo }, SendNotificationRuleActionExecutor.prototype = Object.create(FormRuleActionExecutorBase.prototype), SendNotificationRuleActionExecutor.prototype.constructor = SendNotificationRuleActionExecutor, SendNotificationRuleActionExecutor.prototype.applyState = function (e, t) { var i = e.formContainer.querySelector('[data-sf-role="form-rules-notification-emails"]'); i && (e.notificationEmails ? i.value = e.notificationEmails.join(",") : i.value = "") }, SendNotificationRuleActionExecutor.prototype.updateState = function (e, t) { return e.notificationEmails || (e.notificationEmails = []), -1 === e.notificationEmails.indexOf(t.target) && e.notificationEmails.push(t.target), !0 }, SendNotificationRuleActionExecutor.prototype.undoUpdateState = function (e, t) { if (e.notificationEmails) { var i = e.notificationEmails.indexOf(t.target); -1 !== i && e.notificationEmails.splice(i, 0) } }, SendNotificationRuleActionExecutor.prototype.isConflict = function (e, t) { return e.name === t.name && e.target === t.target }, function () { FormRulesSettings.addConditionEvaluator("Equal", (function (e, t) { return "string" == typeof e ? 0 === e.search(new RegExp("^" + t + "$", "i")) : e === t })), FormRulesSettings.addConditionEvaluator("NotEqual", (function (e, t) { return "string" == typeof e ? -1 === e.search(new RegExp("^" + t + "$", "i")) : e !== t })), FormRulesSettings.addConditionEvaluator("Contains", (function (e, t) { return e.search(new RegExp(t, "i")) > -1 })), FormRulesSettings.addConditionEvaluator("NotContains", (function (e, t) { return -1 === e.search(new RegExp(t, "i")) })); var e = function (e) { return ("number" != typeof e || e == e) && (e && e.toString().length > 0) }; FormRulesSettings.addConditionEvaluator("IsFilled", e), FormRulesSettings.addConditionEvaluator("IsNotFilled", (function (t) { return !e(t) })), FormRulesSettings.addConditionEvaluator("FileSelected", (function (e) { return e && e.length > 0 })), FormRulesSettings.addConditionEvaluator("FileNotSelected", (function (e) { return !e || 0 === e.length })), FormRulesSettings.addConditionEvaluator("IsGreaterThan", (function (e, t) { return e > t })), FormRulesSettings.addConditionEvaluator("IsLessThan", (function (e, t) { return e < t })) }(), function () { var e = function (e) { var t = new Date(e); return new Date(t.getFullYear(), t.getMonth(), t.getDate()).getTime() }, t = function (e, t) { var i = new Date(e); return t && i.setTime(i.getTime() + t), new Date(i.getFullYear(), i.getMonth()).getTime() }, i = function (e) { var t = new Date(parseInt(e.split(["-W"])[0]), 0, 1 + 7 * (parseInt(e.split(["-W"])[1]) - 1)); return t.setDate(t.getDate() - t.getDay() + (t.getDate() <= 4 ? 1 : 8)), t.getTime() }, n = function (e, t) { var i = new Date(e), n = new Date(i.getFullYear(), i.getMonth(), i.getDate(), i.getHours(), i.getMinutes()); return t && (n = new Date(n.getTime() + t)), n.getTime() }; FormRulesSettings.addInputTypeParser("text", (function (e) { return e })), FormRulesSettings.addInputTypeParser("month", (function (e) { return t(e, 6e4 * new Date(e).getTimezoneOffset()) })), FormRulesSettings.addInputTypeParser("number", (function (e) { return parseFloat(e) && Number(e) })), FormRulesSettings.addInputTypeParser("datetime-local", n), FormRulesSettings.addInputTypeParser("date", e), FormRulesSettings.addInputTypeParser("time", (function (e) { return 60 * parseInt(e.split([":"])[0]) + parseInt(e.split([":"])[1]) })), FormRulesSettings.addInputTypeParser("week", i), FormRulesSettings.addRuleValueParser("text", (function (e) { return e }), !0), FormRulesSettings.addRuleValueParser("month", (function (e) { return t(e, 6e4 * new Date(e).getTimezoneOffset()) })), FormRulesSettings.addRuleValueParser("number", (function (e) { return parseFloat(e) && Number(e) })), FormRulesSettings.addRuleValueParser("datetime-local", (function (e) { return n(e, 6e4 * new Date(e).getTimezoneOffset()) })), FormRulesSettings.addRuleValueParser("date", e), FormRulesSettings.addRuleValueParser("time", (function (e) { return function (e, t) { var i = new Date(e); return t && (i = new Date(i.getTime() + t)), 60 * i.getHours() + i.getMinutes() }(e, 6e4 * new Date(e).getTimezoneOffset()) })), FormRulesSettings.addRuleValueParser("week", i) }(), FormRulesSettings.addFieldSelector("text-field-container", "[data-sf-role='text-field-input']"), FormRulesSettings.addFieldSelector("email-text-field-container", "[data-sf-role='email-text-field-input']"), FormRulesSettings.addFieldSelector("multiple-choice-field-container", "[data-sf-role='multiple-choice-field-input']", ":checked"), FormRulesSettings.addFieldSelector("checkboxes-field-container", "[data-sf-role='checkboxes-field-input']", ":checked"), FormRulesSettings.addFieldSelector("paragraph-text-field-container", "[data-sf-role='paragraph-text-field-textarea']"), FormRulesSettings.addFieldSelector("dropdown-list-field-container", "[data-sf-role='dropdown-list-field-select']"), FormRulesSettings.addFieldSelector("file-field-container", "[data-sf-role='single-file-input'] input[type='file']"), function () { var e = new HideShowFieldFormRuleActionExecutor(FormRuleConstants.Actions.Hide); FormRulesSettings.addActionExecutor(FormRuleConstants.Actions.Hide, e); var t = new HideShowFieldFormRuleActionExecutor(FormRuleConstants.Actions.Show); FormRulesSettings.addActionExecutor(FormRuleConstants.Actions.Show, t); var i = new SkipToPageFormRuleActionExecutor; FormRulesSettings.addActionExecutor(FormRuleConstants.Actions.Skip, i); var n = new ShowMessageRuleActionExecutor; FormRulesSettings.addActionExecutor(FormRuleConstants.Actions.ShowMessage, n); var r = new GoToPageRuleActionExecutor; FormRulesSettings.addActionExecutor(FormRuleConstants.Actions.GoTo, r); var o = new SendNotificationRuleActionExecutor; FormRulesSettings.addActionExecutor(FormRuleConstants.Actions.SendNotification, o) }(), function () { "use strict"; var e = new Map, t = function (e) { this._init(e) }; t.prototype = { _init: function (e) { this.fieldContainerSelector = '[data-sf-role$="field-container"]', this.separatorSelector = '[data-sf-role="separator"]', this.formContainerSelector = r(), this.skipFieldsSelector = 'input[type="hidden"][data-sf-role="form-rules-skip-fields"]', this.hiddenFieldsSelector = 'input[type="hidden"][data-sf-role="form-rules-hidden-fields"]', this.formContainer = e.closest(this.formContainerSelector); var t = e.closest(this.separatorSelector); this.fieldsContainer = t || this.formContainer, this.pages = Array.from(this.formContainer.querySelectorAll(this.separatorSelector)), this._initializeFormRules(), this.iterationsMaxCount = 50; var i = this; this.formContainer.addEventListener("form-page-changed", (function (e, t, n) { i._updateSkipPages(n, t) })) }, process: function () { if (this._hasRules()) { this.hiddenFields = this._getHiddenFields(), this.skipFields = this._getSkipFields(); var e = this._contextInitialization(), t = this._evaluateFormRules(e); this._applyActionsState(t), this.hiddenFields = t.hiddenFields, this._setHiddenFields(this.hiddenFields), this._setExecutedActions(t.activeActions) } }, _hasRules: function () { return this.formRules && 0 !== this.formRules.length }, _evaluateFormRules: function (e) { var t = e.fields.map((function (e) { return e.Visible })), i = this._updateContext(e), n = i.fields.map((function (e) { return e.Visible })), r = this._compareArrays(t, n); return e.iterationsCounter > this.iterationsMaxCount || r ? i : (e.iterationsCounter++, this._evaluateFormRules(i)) }, _updateContext: function (e) { for (var t = this._getRulesActionsState(e), i = 0; i < t.length; i++) { var n = t[i], r = e.helper.actionItemIndexOf(e.activeActions, n.data); if (n.data.applyRule) { var o = n.executor.updateState(e, n.data); -1 === r && o && e.activeActions.push(n) } else r > -1 && (n.executor.undoUpdateState(e, n.data), e.activeActions.splice(r, 1)) } return e }, _getRulesActionsState: function (e) { for (var t = [], i = this, n = function (e, t, n) { if (-1 === (r = i._actionItemIndexOf(e, t.data))) { if (n) for (var r = 0; r < e.length; r++)!0 === e[r].data.applyRule && (e[r].data.applyRule = !e[r].executor.isConflict(e[r].data, t.data)); t.data.applyRule = n, e.push(t) } else !1 === e[r].data.applyRule && (e[r].data.applyRule = n) }, r = 0; r < this.formRules.length; r++)for (var o = this.formRules[r], a = this._evaluateConditions(e, o), l = 0; l < o.actions.length; l++) { n(t, o.actions[l], a) } return t }, _applyActionsState: function (e) { for (var t = 0; t < e.activeActions.length; t++) { var i = e.activeActions[t]; i.executor.applyState(e, i.data) } for (var n = e.executedActions.filter((function (t) { return -1 === e.activeActions.indexOf(t) })), r = 0; r < n.length; r++) { var o = n[r]; o.executor.applyState(e, o.data) } }, _evaluateConditions: function (e, t) { for (var i = [], n = 0; n < t.conditions.length; n++) { var r = t.conditions[n], o = this._getContextField(e, r.data.id), a = this._getFieldType(r.data.id), l = !1; if (!0 === o.Visible && r.evaluator) if (o.Values && o.Values.length > 0) for (var s = 0; s < o.Values.length && !(l = r.evaluator.process(o.Values[s], r.data.value, a)); s++); else l = r.evaluator.process(null, r.data.value, a); i.push(l) } return "And" === t.operator ? this._every(i, (function (e) { return e })) : this._some(i, (function (e) { return e })) }, _initializeFormRules: function () { this.formRules = []; var e = this.formContainer.querySelector('input[data-sf-role="form-rules"]'), t = e && e.value.length > 0 ? JSON.parse(e.value) : null; if (t) for (var i = 0; i < t.length; i++) { for (var n = t[i], r = { operator: n.Operator, conditions: [], actions: [] }, o = 0, a = 0; a < n.Conditions.length; a++) { var l = n.Conditions[a], s = FormRulesSettings.getConditionEvaluator(l.Operator); r.conditions.push({ data: { id: l.Id, value: l.Value }, evaluator: s }); var u = this._getFieldPageContainerIndex(l.Id); o = u && u > o ? u : o } for (var d = 0; d < n.Actions.length; d++) { var c = n.Actions[d], f = FormRulesSettings.getActionExecutor(c.Action); f && r.actions.push({ data: { target: c.Target, name: c.Action, pageIndex: o }, executor: f }) } r.actions = this._filterConflictingRuleActions(r.actions), this.formRules.push(r) } }, _filterConflictingRuleActions: function (e) { for (var t = [], i = e.length - 1; i >= 0; i--)0 === t.filter((function (t) { return e[i].executor.isConflict(e[i].data, t.data) })).length && t.push(e[i]); return t.reverse() }, _contextInitialization: function () { var e = this._getExecutedActions(); return { fields: this._fieldsInitialization(), executedActions: e.slice(), activeActions: e.slice(), formContainer: this.formContainer, formContainerSelector: this.formContainerSelector, iterationsCounter: 0, hiddenFields: this.hiddenFields, skipToPageCollection: [], helper: { showField: this._showField.bind(this), hideField: this._hideField.bind(this), getFieldElement: this._getFieldElement.bind(this), getFieldStartSelector: this._getFieldStartSelector.bind(this), getFieldEndSelector: this._getFieldEndSelector.bind(this), fieldIndexOf: this._fieldIndexOf.bind(this), arrayIndexOf: this._arrayIndexOf.bind(this), actionItemIndexOf: this._actionItemIndexOf.bind(this) } } }, _fieldsInitialization: function () { for (var e = [], t = this._getFormRulesFields(), i = 0; i < t.length; i++)e.push({ FieldControlId: t[i], Values: this._getFieldValues(t[i]), Visible: -1 === this._arrayIndexOf(this.hiddenFields, t[i]) && -1 === this._arrayIndexOf(this.skipFields, t[i]) }); return e }, _getFormRulesFields: function () { for (var e = [], t = 0; t < this.formRules.length; t++) { for (var i = 0; i < this.formRules[t].conditions.length; i++) { var n = this.formRules[t].conditions[i].data.id; -1 === this._arrayIndexOf(e, n) && e.push(n) } for (var r = 0; r < this.formRules[t].actions.length; r++) { var o = this.formRules[t].actions[r].executor.getActionFieldIds(this.formRules[t].actions[r].data); if (o && o.length > 0) for (var a = 0; a < o.length; a++)-1 === this._arrayIndexOf(e, o[a]) && e.push(o[a]) } } return e }, _updateSkipPages: function (e, t) { if (e < t) for (var i = FormRulesSettings.getFieldsContainerNames(), n = e + 1; n < t; n++)for (var r = 0; r < i.length; r++)for (var o = this.pages.eq(n).find('[data-sf-role="' + i[r] + '"]'), a = 0; a < o.length; a++) { var l = FormRulesSettings.getFieldValueElements(o[a]); if (l.length) { var s = l.first().setAttribute("name"), u = this.formContainer.querySelectorAll("script[data-sf-role-field-name='" + s + "']")[0]; if (u) { var d = u.getAttribute("data-sf-role"); if (d) { var c = d.replace("start_field_", ""); this._skipField(c) } } } } else for (var f = this.skipFields.length - 1; f >= 0; f--) { var h = this._getFieldPageContainerIndex(this.skipFields[f]); t < h && h < e && this._unskipField(this.skipFields[f]) } this._setSkipFields(this.skipFields) }, _skipField: function (e) { -1 === this._arrayIndexOf(this.skipFields, e) && (this.skipFields.push(e), this._getFieldElement(e).setAttribute("disabled", "disabled")) }, _unskipField: function (e) { var t = this._arrayIndexOf(this.skipFields, e); t > -1 && (this.skipFields.splice(t, 1), this._getFieldElement(e).removeAttribute("disabled")) }, _actionItemIndexOf: function (e, t) { for (var i = 0; i < e.length; i++)if (e[i].data.target === t.target && e[i].data.name === t.name && e[i].data.pageIndex === t.pageIndex) return i; return -1 }, _getContextField: function (e, t) { for (var i = 0; i < e.fields.length; i++)if (e.fields[i].FieldControlId === t) return e.fields[i]; return null }, _getFieldElement: function (e) { var t = this.formContainer.querySelector(this._getFieldStartSelector(e)); if (t) { for (var i = [], n = t.nextElementSibling; !n.matches(this._getFieldEndSelector(e));)i.push(n), n = n.nextElementSibling; var r = FormRulesSettings.getFieldsContainerNames(); if (r && r.length > 0) for (var o = 0; o < r.length; o++) { var a = '[data-sf-role="' + r[o] + '"]', l = null; for (let e = 0; e < i.length; e++) { if ((s = i[0]).matches(a)) { l = s; break } } if (!l) for (let e = 0; e < i.length; e++) { var s; if ((s = i[0]).querySelector(a)) { l = s; break } } if (l) return FormRulesSettings.getFieldValueElements(l) } } return null }, _showField: function (e, t) { var i = this._arrayIndexOf(e.hiddenFields, t); if (i > -1) { e.hiddenFields.splice(i, 1); var n = e.formContainer.querySelector(this._getFieldStartSelector(t)); if (n) { var r = this._getFieldElement(t); r && r.removeAttribute("disabled"); for (var o = n.nextElementSibling; !o.matches(this._getFieldEndSelector(t));)o.classList.remove("d-none"), o.classList.add("d-block"), o = o.nextElementSibling } } }, _hideField: function (e, t) { if (-1 === this._arrayIndexOf(e.hiddenFields, t)) { e.hiddenFields.push(t); var i = e.formContainer.querySelector(this._getFieldStartSelector(t)); if (i) { var n = this._getFieldElement(t); n && n.setAttribute("disabled", "disabled"); for (var r = i.nextElementSibling; !r.matches(this._getFieldEndSelector(t));)r.classList.add("d-none"), r.classList.remove("d-block"), r = r.nextElementSibling } } }, _getFieldType: function (e) { var t = this._getFieldElement(e), i = null; return t && ((i = t.getAttribute("data-sf-input-type")) || (i = this._getFieldElement(e).getAttribute("type"))), i }, _getFieldValues: function (e) { var t = this._getFieldContainer(e); return FormRulesSettings.getFieldValues(t) }, _getFieldContainer: function (e) { return this._getFieldElement(e).closest(this.fieldContainerSelector) }, _getFieldPageContainer: function (e) { var t = this._getFieldElement(e); return t.closest(this.separatorSelector) || t.closest(this.formContainerSelector) }, _getFieldPageContainerIndex: function (e) { var t = this._getFieldPageContainer(e); return this.pages.findIndex((function (e) { return e === t })) }, _fieldIndexOf: function (e, t) { for (var i = 0; i < e.length; i++)if (e[i].FieldControlId === t) return i; return -1 }, _getExecutedActions: function () { return e.get(this.formContainer) || [] }, _setExecutedActions: function (t) { e.set(this.formContainer, t) }, _getHiddenFields: function () { var e = this.formContainer.querySelector(this.hiddenFieldsSelector); return e ? this._createArrayFromCsvValue(e.value) : [] }, _setHiddenFields: function (e) { var t = this.formContainer.querySelector(this.hiddenFieldsSelector); t && (t.value = e.join(",")) }, _getSkipFields: function () { var e = this.formContainer.querySelector(this.skipFieldsSelector); return e ? this._createArrayFromCsvValue(e.value) : [] }, _setSkipFields: function (e) { this.formContainer.querySelector(this.skipFieldsSelector).value = e.join(",") }, _createArrayFromCsvValue: function (e) { for (var t = (e || "").split(","), i = [], n = 0; n < t.length; n++)t[n] && "" !== t[n] && i.push(t[n]); return i }, _arrayIndexOf: function (e, t) { for (var i = 0; i < e.length; i++)if (e[i] === t) return i; return -1 }, _compareArrays: function (e, t) { var i = e.length; if (i !== t.length) return !1; for (; i--;)if (e[i] !== t[i]) return !1; return !0 }, _some: function (e, t) { for (var i = 0; i < e.length; i++)if (t(e[i])) return !0; return !1 }, _every: function (e, t) { for (var i = 0; i < e.length; i++)if (!t(e[i])) return !1; return !0 }, _getFieldStartSelector: function (e) { return 'script[data-sf-role="start_field_' + e + '"]' }, _getFieldEndSelector: function (e) { return 'script[data-sf-role="end_field_' + e + '"]' } }; var i = []; function n(e, n) { if (e) { var r = null, o = i.filter((function (t) { return t.formContainer === e }))[0]; !0 !== n && o ? r = o.formRulesExecutor : (r = new t(e), !0 === n && (i = i.filter((function (e) { return e.formContainer !== o.formContainer }))), i.push({ formContainer: e, formRulesExecutor: r })), r.process() } } function r() { var e = '[data-sf-role="form-container"]'; return document.querySelectorAll(e).length > 0 ? e : null } window.processFormRules = n, window.sfFormValueChanged = function (e) { n(e.closest(r()), !1) } }(), init(null);
