@model Progress.Sitefinity.AspNetCore.Models.PageModel
@using Progress.Sitefinity.AspNetCore.Mvc.Rendering

@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@addTagHelper *, Progress.Sitefinity.AspNetCore

@inject Progress.Sitefinity.AspNetCore.Web.IRequestContext requestContext;
@inject Progress.Sitefinity.AspNetCore.Web.IRenderContext renderContext;

<!DOCTYPE html>
<html id="html" lang="@requestContext.Culture">
<head>
    <base href="~/" />
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="icon" type="image/x-icon" href="favicon.ico">

    @Html.RenderSeoMeta(this.Model)

    <environment include="Development">
          <link rel="stylesheet" href="@Progress.Sitefinity.AspNetCore.Constants.PrefixRendererUrl("Styles/bootstrap.css")" />
    </environment>
    <environment exclude="Development">
       <link rel="stylesheet" href="@Progress.Sitefinity.AspNetCore.Constants.PrefixRendererUrl("Styles/bootstrap.min.css")" />
    </environment>

    @* Scripts for the OOB Sitefinity widgets *@
    <link rel="stylesheet" href="@Progress.Sitefinity.AspNetCore.Constants.PrefixRendererUrl("styles/main.css")" type="text/css" />

    @* Custom styles *@
    <link rel="stylesheet" href="~/styles/styles.css" />

    @* Custom scripts *@
    <script src="~/scripts/scripts.js"></script>
</head>

<body class="container-fluid">
    @RenderSection("Scripts")

    @* Start - Code valid for versions < 14.2.7921 *@
        @* For Older versions you can include the file directly in edit and live, 
        but it causes a 'race condition' during editing of the page and inconsistently breaks the rendering in the dom  *@

        @* <script src="_framework/blazor.server.js"></script> *@
    @* End - Code valid for versions < 14.2.7921 *@

    @* Start - Code valid for versions >= 14.2.7921 *@
    @if (renderContext.IsEdit)
    {
        @* Important to be at the end of the body tag *@
        <script src="_framework/blazor.server.js" autostart="false"></script>
        <script>
            document.addEventListener("DOMContentLoaded", function() {
                
                const savedVal = window["rendererContract"];
                window["rendererContract"] = undefined;

                Blazor.start().then(() => {
                    let handle = null;
                    window.componentRendered = function() {
                        if (handle) {
                            clearTimeout(handle);
                        }

                        handle = setTimeout(() => {
                            window["rendererContract"] = savedVal;
                            window.dispatchEvent(new Event('contractReady'));
                        }, 100);
                    };
                });
            });
        </script>
    }
    else
    {
        <script src="_framework/blazor.server.js"></script>
    }
    @* End - Code valid for versions >= 14.2.7921 *@
</body>
</html>
